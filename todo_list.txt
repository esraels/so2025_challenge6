# TODO list:
- update post:
    - mention funcC has optimizations but still has benefit of branch predictions.
    - mention funcE is expected to always be the fastest in all scenario. but this is not the case.
        - research why?
            - maybe the waiting time for the write wait time of iMin, iMax, and vMaxCount in the next loop.
            - check if cache is related.
    - mention how execution time is measured in the code.
    - how the app was run to get the result.
        - all apps off except task manager and terminal.
    - mention machine spec used.
    - which func won on most cases.
    - fix final output format in the post.
        - needs newline space between table and the label of next table.
    - display the answers of given input files.
    - add O(n) time result.
    -? add boolean algebra optimization.
    -? add how branch is converted to branchless.
    - add graph? to compare visually the performance behavior of the test functions.
- write in cpp:
    [ok]- initial implementation version:
    - write optimal version:
        - speed
            [ok]- implement different version with incremental optimization improvements.
            - provide input data.
                [ok]- random-pure
                [ok]- sorted
                - multiple answer
                - multiple answer within controlled range of index.
            - write all input data to file.
            - write output to different files.
            [ok]- read input data from file.
                [ok]- add commandline option to set how many loop to execute a single list of data.
            - read input data from external stream.
            [ok]- test data to both random and sorted data.
                [ok]- fix bug: -n not working.
                [ok]- test the input data files provided in the challenge site.
        - memory space.
    - write generic version:
        - supports negative numbers.
        - beyond 0-999 which is INT_MIN <= x <= INT_MAX.
    - accepts input from file.
    - accepts input from stdin stream.
    - benchmark performance:
        [ok]- speed
        - memory

- write in other language:
    - bash
    - python
    - batch
    - ruby
    - rust
    - jscript
    

